---
// Header component with navigation
import { Button } from '../ui/button';
import ContactNavButton from './ContactNavButton.tsx';
import NavLink from './NavLink.tsx';
---

<header class="bg-white shadow-sm border-b border-gray-100 sticky top-0 z-50">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16 md:h-20">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-3 group">
          <img 
            src="/images/assets/wanimaru.png" 
            alt="わにまる ロゴ" 
            class="w-10 h-10 md:w-12 md:h-12 object-contain group-hover:scale-110 transition-transform"
            loading="eager"
            decoding="async"
          />
          <span class="text-xl md:text-2xl font-bold text-gray-900 group-hover:text-primary transition-colors font-heading">わにまる</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center" role="navigation" aria-label="メインナビゲーション">
        <div class="flex items-center gap-6" role="menubar">
          <NavLink client:load href="/about" isActive={Astro.url.pathname === '/about'}>わにまるとは</NavLink>
          <NavLink client:load href="/activities" isActive={Astro.url.pathname === '/activities'}>活動内容</NavLink>
          <NavLink client:load href="/news" isActive={Astro.url.pathname === '/news' || Astro.url.pathname.startsWith('/news/')}>ニュース</NavLink>
          <NavLink client:load href="/join" isActive={Astro.url.pathname === '/join'}>参加する</NavLink>
        </div>
        <div class="ml-12">
          <ContactNavButton client:load mobile={false} />
        </div>
      </nav>

      <!-- Mobile menu button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden flex items-center justify-center w-10 h-10 rounded-lg hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-primary/20 transition-colors"
        aria-label="メニューを開く"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <svg id="menu-icon" class="w-6 h-6 text-gray-700 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg id="close-icon" class="w-6 h-6 text-gray-700 hidden transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden border-t border-gray-100">
      <nav class="py-4 space-y-1" role="navigation" aria-label="モバイルナビゲーション">
        <div role="menu">
          <NavLink client:load href="/" mobile={true} isActive={Astro.url.pathname === '/'}>ホーム</NavLink>
          <NavLink client:load href="/about" mobile={true} isActive={Astro.url.pathname === '/about'}>わにまるとは</NavLink>
          <NavLink client:load href="/activities" mobile={true} isActive={Astro.url.pathname === '/activities'}>活動内容</NavLink>
          <NavLink client:load href="/news" mobile={true} isActive={Astro.url.pathname === '/news' || Astro.url.pathname.startsWith('/news/')}>ニュース</NavLink>
          <NavLink client:load href="/join" mobile={true} isActive={Astro.url.pathname === '/join'}>参加する</NavLink>
          <ContactNavButton client:load mobile={true} />
        </div>
      </nav>
    </div>
  </div>
</header>


<script>
  // Mobile menu toggle functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');
  
  function toggleMobileMenu() {
    if (!mobileMenu || !mobileMenuButton || !menuIcon || !closeIcon) return;
    
    const isOpen = !mobileMenu.classList.contains('hidden');
    
    if (isOpen) {
      // Close menu
      mobileMenu.classList.add('hidden');
      mobileMenuButton.setAttribute('aria-label', 'メニューを開く');
      mobileMenuButton.setAttribute('aria-expanded', 'false');
      menuIcon.classList.remove('hidden');
      closeIcon.classList.add('hidden');
    } else {
      // Open menu
      mobileMenu.classList.remove('hidden');
      mobileMenuButton.setAttribute('aria-label', 'メニューを閉じる');
      mobileMenuButton.setAttribute('aria-expanded', 'true');
      menuIcon.classList.add('hidden');
      closeIcon.classList.remove('hidden');
      
      // Focus first menu item for accessibility
      const firstMenuItem = mobileMenu.querySelector('a');
      if (firstMenuItem) {
        (firstMenuItem as HTMLElement).focus();
      }
    }
  }
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', toggleMobileMenu);
    
    // Handle escape key
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
        toggleMobileMenu();
        mobileMenuButton.focus();
      }
    });
  }

  // Close mobile menu when clicking outside
  document.addEventListener('click', (event) => {
    if (mobileMenu && !mobileMenu.contains(event.target as Node) && !mobileMenuButton?.contains(event.target as Node)) {
      if (!mobileMenu.classList.contains('hidden')) {
        toggleMobileMenu();
      }
    }
  });

  // Close mobile menu on window resize to desktop size
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 768 && mobileMenu && !mobileMenu.classList.contains('hidden')) {
      toggleMobileMenu();
    }
  });
</script>