---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/common/Header.astro';
import Footer from '../../components/common/Footer.astro';
import { getNewsDetail, getNewsList } from '../../lib/microcms';
import { NEWS_CATEGORIES } from '../../lib/constants';
import { formatDate } from '../../lib/utils';

export async function getStaticPaths() {
  // Get all news for static generation
  const newsData = await getNewsList({ limit: 100 });
  
  return newsData.contents.map((news) => ({
    params: { slug: news.slug || news.id },
    props: { news },
  }));
}

const { slug } = Astro.params;
const { news } = Astro.props;

// Get the full news detail (in production, this would fetch from CMS)
const newsDetail = await getNewsDetail(slug);

if (!newsDetail) {
  return Astro.redirect('/news');
}

// Get related news
const relatedNews = await getNewsList({
  limit: 3
});

const filteredRelatedNews = relatedNews.contents.filter(item => (item.slug || item.id) !== slug);
---

<BaseLayout 
  title={newsDetail.title} 
  description={newsDetail.excerpt || `わにまるのニュース: ${newsDetail.title}`}
  ogImage={newsDetail.thumbnail?.url}
>
  <Header slot="header" />

  <main class="pt-20">
    <!-- Breadcrumb -->
    <section class="py-6 bg-gray-50">
      <div class="container mx-auto px-4">
        <nav class="max-w-4xl mx-auto">
          <ol class="flex items-center space-x-2 text-sm text-gray-600">
            <li><a href="/" class="hover:text-primary">ホーム</a></li>
            <li class="flex items-center">
              <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
              <a href="/news" class="hover:text-primary">ニュース</a>
            </li>
            <li class="flex items-center">
              <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
              <span class="text-gray-900">{newsDetail.title}</span>
            </li>
          </ol>
        </nav>
      </div>
    </section>

    <!-- Article Header -->
    <article class="py-12">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          <!-- Meta Info -->
          <div class="flex items-center mb-6">
            <span class={`px-3 py-1 rounded-full text-sm font-medium mr-4 ${typeof newsDetail.category === 'string' ? (NEWS_CATEGORIES[newsDetail.category]?.color || 'bg-gray-100 text-gray-800') : 'bg-gray-100 text-gray-800'}`}>
              {typeof newsDetail.category === 'string' ? (NEWS_CATEGORIES[newsDetail.category]?.label || newsDetail.category) : newsDetail.category?.name || 'お知らせ'}
            </span>
            <time class="text-gray-600">
              {formatDate(newsDetail.publishedAt)}
            </time>
            {newsDetail.isImportant && (
              <span class="ml-4 px-3 py-1 bg-accent text-white text-sm rounded-full">
                重要
              </span>
            )}
          </div>

          <!-- Title -->
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-8 leading-tight">
            {newsDetail.title}
          </h1>

          <!-- Featured Image -->
          {newsDetail.thumbnail && (
            <div class="mb-8">
              <img 
                src={newsDetail.thumbnail.url} 
                alt={newsDetail.thumbnail.alt || newsDetail.title}
                class="w-full h-64 md:h-96 object-cover rounded-xl shadow-soft"
              />
            </div>
          )}

          <!-- Content -->
          <div class="prose prose-lg max-w-none">
            <div set:html={newsDetail.content} />
          </div>

          <!-- Tags -->
          {newsDetail.tags && newsDetail.tags.length > 0 && (
            <div class="mt-8 pt-8 border-t border-gray-200">
              <h3 class="text-sm font-medium text-gray-900 mb-3">タグ</h3>
              <div class="flex flex-wrap gap-2">
                {newsDetail.tags.map((tag) => (
                  <span class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full">
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          )}

          <!-- Share Buttons -->
          <div class="mt-8 pt-8 border-t border-gray-200">
            <h3 class="text-sm font-medium text-gray-900 mb-3">シェア</h3>
            <div class="flex space-x-4">
              <a 
                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(newsDetail.title)}&url=${encodeURIComponent(Astro.url.toString())}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors"
              >
                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                </svg>
                Twitter
              </a>
              <a 
                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.toString())}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center px-4 py-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors"
              >
                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
                Facebook
              </a>
              <button 
                onclick="navigator.clipboard.writeText(window.location.href)"
                class="flex items-center px-4 py-2 bg-gray-500 text-white rounded-full hover:bg-gray-600 transition-colors"
              >
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
                URLコピー
              </button>
            </div>
          </div>
        </div>
      </div>
    </article>

    <!-- Related News -->
    {filteredRelatedNews.length > 0 && (
      <section class="py-16 bg-gray-50">
        <div class="container mx-auto px-4">
          <div class="max-w-6xl mx-auto">
            <h2 class="text-2xl font-bold text-gray-900 mb-8">関連ニュース</h2>
            <div class="grid md:grid-cols-3 gap-8">
              {filteredRelatedNews.map((item) => (
                <article class="bg-white rounded-xl shadow-soft overflow-hidden hover:shadow-medium transition-shadow">
                  {item.thumbnail && (
                    <div class="h-48">
                      <img 
                        src={item.thumbnail.url} 
                        alt={item.thumbnail.alt || item.title}
                        class="w-full h-full object-cover"
                      />
                    </div>
                  )}
                  <div class="p-6">
                    <div class="flex items-center mb-3">
                      <span class={`px-2 py-1 rounded-full text-xs font-medium mr-2 ${typeof item.category === 'string' ? (NEWS_CATEGORIES[item.category]?.color || 'bg-gray-100 text-gray-800') : 'bg-gray-100 text-gray-800'}`}>
                        {typeof item.category === 'string' ? (NEWS_CATEGORIES[item.category]?.label || item.category) : item.category?.name || 'お知らせ'}
                      </span>
                      <time class="text-xs text-gray-600">
                        {formatDate(item.publishedAt)}
                      </time>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-900 mb-3 line-clamp-2">
                      <a href={`/news/${item.slug || item.id}`} class="hover:text-primary transition-colors">
                        {item.title}
                      </a>
                    </h3>
                    {item.excerpt && (
                      <p class="text-gray-600 text-sm mb-4 line-clamp-3">
                        {item.excerpt}
                      </p>
                    )}
                    <a href={`/news/${item.slug || item.id}`} class="inline-flex items-center text-primary hover:text-primary-600 transition-colors text-sm">
                      続きを読む
                      <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                  </div>
                </article>
              ))}
            </div>
          </div>
        </div>
      </section>
    )}

    <!-- Back to News -->
    <section class="py-8">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto text-center">
          <a href="/news" class="inline-flex items-center text-primary hover:text-primary-600 transition-colors">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            ニュース一覧に戻る
          </a>
        </div>
      </div>
    </section>
  </main>

  <Footer slot="footer" />
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    color: #374151;
    line-height: 1.75;
  }
  
  .prose h2 {
    font-size: 1.5rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #1f2937;
  }
  
  .prose h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: #1f2937;
  }
  
  .prose p {
    margin-bottom: 1.25rem;
  }
  
  .prose ul, .prose ol {
    margin-bottom: 1.25rem;
    padding-left: 1.5rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose a {
    color: #34a398;
    text-decoration: underline;
  }
  
  .prose a:hover {
    color: #2a8279;
  }
  
  .prose strong {
    font-weight: 600;
    color: #1f2937;
  }
  
  .prose blockquote {
    border-left: 4px solid #34a398;
    padding-left: 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: #4b5563;
  }
</style>